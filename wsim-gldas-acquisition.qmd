---
title: "Acquiring and Pre-Processing the WSIM-GLDAS Dataset"
author: "Josh Brinks, Elaine Famutimi"
date: "December, 6 2023"
bibliography: wsim-gldas-references.bib
editor: 
  markdown: 
    wrap: sentence
---

## TO DO

-   Add context for package selection
    -   stars for raster management
    -   sf for vector/shapefile/geojson
    -   lubridate for date management
-   More dataset context/explanation (geoBoundaries vs gadm).
-   Citations and external links for data and packages.
-   Decide on which wsim-gldas version to use.
    -   Switch out the current for a 12-month integration anomaly.
-   Write out the smaller pre-processed file to disk for potential use in binder workshop or subsequent lesson in the module.
-   Introduce automated data acquisition with some [NASA SEDAC] or NASA earthdata package??

## Overview



In this lesson, you will acquire **Water Security Indicator Model - Global Land Data Assimilation System (WSIM-GLDAS)** from the [NASA Socioeconomic Data and Applications Center (SEDAC)](https://sedac.ciesin.columbia.edu/) website and will also retrieve [geoBoundaries](https://www.geoboundaries.org/api.html) data directly from an API.
You will learn how to subset data for a region of interest and save the subsetted data as a new file.

## Learning Objectives

After completing this lesson, you should be able to:

-   Retrieve WSIM-GLDAS data from SEDAC.

-   Subset data for a region of interest and time period.

-   Plot geospatial data to visualize precipitation deficit patterns.

## Introduction

::: column-margin
::: {.callout-tip style="color: #5a7a2b;"}
## Data Science Review

A [raster](https://docs.qgis.org/2.18/en/docs/gentle_gis_introduction/raster_data.html) is a grid of geographic data which has information stored per pixel. Rasters can store many types of information as attributes, and they usually have dimensions such as latitude, longitude, and time.

:::
:::

The **Water Security (WSIM-GLDAS) Monthly Grids, v1 (1948 -- 2014)** dataset can be download from the NASA [SEDAC](https://sedac.ciesin.columbia.edu/data/set/water-wsim-gldas-v1) website [@isciences2022].
Downloads are organized by combination of variable (composite surplus/deficit, temperature, PETmE, runoff, soil moisture, precipitation) and integration period (1, 3, 6, 12 months).
Each variable-integration combination consists of a NetCDF **raster** file with a time dimension that contains a raster layer for each of the 804 months between January, 1948 and December, 2014.
Some variables also contain multiple attributes each with their own time dimension of 804 rasters.
Hence, this is a large file that takes upwards of 2 hours to download and may cause memory issues on certain systems.
We will work with the **Composite Anomaly One-Month Return Period](https://sedac.ciesin.columbia.edu/downloads/data/water/water-wsim-gldas-v1/water-wsim-gldas-v1-composite-anom-one-month-netcdf.zip)** NetCDF file.

<img src="https://www.noaa.gov/sites/default/files/styles/landscape_width_1275/public/2021-05/watercycle_rc.png" alt="NOAA Water Cycle"/>[^1]

[^1]: Photo Credit, Dennis Cain/NWS.

The water cycle is the constant process of circulation of water on, above, and under the Earth's surface.
Human interventions such as greenhouse gas emissions, land use changes, dam and reservoir development, and groundwater overexploitation have all drastically affected the natural water cycle in recent decades.
Human interventions in the water cycle have consequential impacts on oceanic, groundwater, and land processes, influencing phenomena such as droughts and floods.

Precipitation deficits can also cause drought, which is a prolonged period of little to no rainfall.
Droughts have impacts on the environment and humans, at times causing a chain reaction.
For example, California had a drought from 2012 to 2014.
While it isn't uncommon for California to have periods of low precipitation, that with a combination of sustained record high temperatures created severe water shortages. The drought subsequently dried out rivers which depleted populations of the [Chinook salmon](https://www.fisheries.noaa.gov/species/chinook-salmon) disrupting Native American tribes' food supply. [@NationalPublicRadio2014]

## Reading the Data

::: column-margin
::: {.callout-tip style="color: #5a7a2b;"}
## Data Science Review

This lesson uses the [`stars`](https://r-spatial.github.io/stars/), [`sf`](https://r-spatial.github.io/sf/), [`dplyr`](https://dplyr.tidyverse.org/), and [`lubridate`](https://lubridate.tidyverse.org/) packages.
If you'd like to learn more about the functions used in this lesson you can use the help guides on their package websites.
:::
:::

First, install and load the R packages required for this exercise:

```{r eval=FALSE}
packages_to_check <- c("stars", "sf", "lubridate", "cubelyr", "lubridate")

# Check and install packages
for (package_name in packages_to_check) {
  if (!package_name %in% rownames(installed.packages())) {
    install.packages(package_name)
    cat(paste("Package", package_name, "installed.\n"))
  } else {
    cat(paste("Package", package_name, "is already installed.\n"))
  }
  library(package_name, character.only = TRUE)
}

```

Once you've completed the download and placed the .nc file into your working directory read in the file with the `stars::read_stars()` function.

```{r}

# proxy = TRUE will limit memory useage but does 
# not always work with certain downstream processing functions

wsim_gldas_anoms <- stars::read_stars("composite_12mo.nc", proxy = FALSE)

print(wsim_gldas_anoms)
```

The print command gives some basic information.
The outputs tells us we have 5 attributes (deficit, deficit_cause, surplus, surplus_cause, both) and 3 dimensions.
The first 2 dimensions are the spatial extents (x/y--longitude/latitude) and time is the 3rd dimension.

This means the total number of individual raster layers in this NetCDF is 4020 (5 attributes x 804 time steps/months).

## Attribute Selection

The WSIM data is quite large with many variables available. We can manage this large data by first subsetting the data by a single variable "deficits" (drought).

```{r}
names(wsim_gldas_anoms)

#subtetting the variable 'deficit'
wsim_gldas_anoms <- wsim_gldas_anoms['deficit']
```

## Time Selection
::: column-margin
::: {.callout-tip style="color: #5a7a2b;"}
## Data Science Review

[Vectors](https://docs.qgis.org/2.18/en/docs/gentle_gis_introduction/vector_data.html) are a collection or a list of numbers. Vectors can be used to store coordinates, which can then be used to extract information from a pixel in the raster for analysis, such as a time series.

:::
:::

Specifying a temporal range of interest will free up more space.
We'll grab every year for 2000-2014.
This can be accomplished by generating a sequence for every year between December 2000 and December 2014, and then passing that **vector** of dates to `filter`.

```{r}
# generate a vector of dates for subsetting
keeps<-seq(lubridate::ymd("2000-12-01"),
           lubridate::ymd("2014-12-01"), 
           by = "year")
#change data type to POSIXct
keeps <- as.POSIXct(keeps)
# filter using that vector
wsim_gldas_anoms <- dplyr::filter(wsim_gldas_anoms, time %in% keeps)

print(wsim_gldas_anoms)
```

Now we're down to a single attribute ("both") with 15 time-steps.
We can take a look at the first 6 years by passing the object through `slice` and then into `plot`.

```{r warning=FALSE}
wsim_gldas_anoms |>
  dplyr::slice(index = 1:6, along = "time") |>
  plot(key.pos = 1, breaks = c(0, -5, -10, -20, -30, -50), key.lab = "Deficit")
```

Although we've pared it down to a single attribute with a restricted time period of interest, we can take it a step further and reduce the spatial extent to a country or state of interest.

## Spatial Selection

We can spatially crop the raster stack with a few different methods.
Options include using a bounding box (xmin, ymin, xmax, ymax), another raster object, or a vectorized boundary like a shapefile or geojson.

::: column-margin
::: {.callout-tip style="color: #5a7a2b;"}
## Data Science Review

Built by the community and [William & Mary geoLab](https://github.com/wmgeolab/geoBoundaries), the geoBoundaries Global Database of Political Administrative Boundaries Database is an online, open license (CC BY 4.0 / ODbL) resource of information on administrative boundaries (i.e., state, county) for every country in the world. Since 2016, we have tracked approximately 1 million boundaries within over 200 entities, including all UN member states.

:::
:::

Using a vector boundary is one of the more common geoprocessing tasks.
In this example we'll pull a geojson of the United States from the geoBoundaries API.
You can also download vectorized boundaries directly from [www.geoboundaries.org](www.geoboundaries.org).

The call to geoBoundaries' API is as such:

"https://www.geoboundaries.org/api/current/gbOpen/*ISO3C*/*LEVEL*/"

We adjust the bolded components of the URL address to specify the country we want using the ISO 3 Character Country Code (USA) and the desired Administrative Level (ADM1).

```{r}
usa <- httr::GET("https://www.geoboundaries.org/api/current/gbOpen/USA/ADM1/")
```

After the `GET` call, we have to translate the `content`.

```{r}
usa <- httr::content(usa)

names(usa)
```

The parsed content object contains 32 components.
Item 29 is a direct link to the geojson file (gjDownloadURL).
Read that in and check the visuals.

```{r}
usa <- sf::st_read(usa$gjDownloadURL)

plot(sf::st_geometry(usa))
```

This looks good, but it includes all United States territories.
For simplicity, we can get it down to only the contiguous United States.

```{r}
drops<-
  c("Alaska", "Hawaii", 
    "American Samoa",
    "Puerto Rico",
    "Commonwealth of the Northern Mariana Islands", 
    "Guam", 
    "United States Virgin Islands")

usa<-usa[!(usa$shapeName %in% drops),]

plot(sf::st_geometry(usa))
```

We can take this a step further and select a target state.

```{r}
texas <- usa[usa$shapeName == "Texas",]

plot(sf::st_geometry(texas))
```

From here we can crop the WSIM GLDAS raster stack by indexing it with the stored boundary of Texas.

\*\*Texas, in 2011, experienced a severe drought which caused rivers to dry up and lakes to reach historic low levels.
Climate experts discovered that the drought was produced by "La Niña", a weather pattern that causes the surface temperature of the Pacific Ocean to be cooler than normal.
This in turn creates drier and warmer weather in the southern United States.
La Niña can occur for a year or more, and returns once every few years.
The drought was further exacerbated by high temperatures related to climate change in February of 2013.[@StateImpact]

\*\*The drought cost farmers and ranchers an estimated \$8 billion in losses.
Furthermore, the dry conditions fueled a series of wildfires across the state in early September of 2011.
The most devastating wildfire occurred in Bastrop County, in which 34,000 acres and 1,300 homes were destroyed.[@StormSignals2011]

```{r}
wsim_gldas_anoms_tex <- wsim_gldas_anoms[texas]
```

For a final visual check we'll take the last time-step in the WSIM-GLDAS dataset (15/December, 2014) and plot it with an overlay of the Texas boundary.

```{r warning = FALSE}
wsim_gldas_anoms_tex |>
  dplyr::slice(index = 15, along = "time") |>
  plot(reset = FALSE, breaks = c(0,-1,-2,-3,-4,-5))

plot(sf::st_geometry(texas),
     add = TRUE,
     lwd = 3,
     fill = NA,
     border = 'purple')
```

The subsetted dataset may be written to disk, and saved for future modules.

```{r}
stars::write_mdim(wsim_gldas_anoms_tex, "wsim_gldas_tex.nc")
```

The size of the pre-processed dataset is 1.6 MB compared to the original dataset of 1.7 GB.
This is much more manageable in cloud environments, workshops, and git platforms.

## In this Lesson, You Learned...

Congratulations!
Now you should be able to:

-   Use R packages such as dplyr and lubridate for temporal subsetting.
-   Crop a raster stack with a spatial boundary.
-   Write a subsetted dataset to disk.

## Lesson 2

In the next lesson we will create more advanced visualizations and extract data of interest.

[Lesson 2: WSIM-GLDAS Visualizations and Data Extraction](https://ciesin-geospatial.github.io/TOPSTSCHOOL-module-1-water/wsim-gldas-vis.html){.btn .btn-primary .btn role="button"}
